--- squid-3.4.8/helpers/basic_auth/LDAP/basic_ldap_auth.cc	2014-10-08 09:04:50.051427813 -1000
+++ squid-3.4.8/helpers/basic_auth/LDAP/basic_ldap_auth.cc.orig	2014-10-08 09:02:26.571466834 -1000
# This patch allows on more verification on squid authorisations but is VERY specific in the LDAP schema of the domain "gov.pf" !...
# get the last squid source: http://www.squid-cache.org
# Compilation : cd squid-3.4.8/ ; ./configure --enable-basic-auth-helpers=LDAP ; make
# Syntax example (in squid.conf context):
# auth_param basic program /usr/local/squid/libexec/squid_ldap_auth -v 3 -b dc=gov,dc=pf -f "(uid=%s)" -F "cn=proxyAccess,ou=roleApplicatif,ou=proxy,ou=application," newldap
#
@@ -135,6 +135,7 @@
 static const char *bindpasswd = NULL;
 static const char *userattr = "uid";
 static const char *passwdattr = NULL;
+static const char *oneMoreFilter = NULL;
 static int searchscope = LDAP_SCOPE_SUBTREE;
 static int persistent = 0;
 static int bind_once = 0;
@@ -495,6 +496,10 @@
         case 'd':
             debug_enabled = 1;
             break;
+        case 'F':
+            oneMoreFilter = value;
+            break;
+
         default:
             fprintf(stderr, PROGRAM_NAME ": ERROR: Unknown command line option '%c'\n", option);
             exit(1);
@@ -747,6 +752,23 @@
         }
     } else if (ldap_simple_bind_s(bind_ld, dn, password) != LDAP_SUCCESS)
         ret = 1;
+
+     if ( !ret && oneMoreFilter ) {             // one More control before to confirm the uid authorization :
+        char filter[16384];
+        char *rootDn=dn;
+ 
+        if ( oneMoreFilter[strlen(oneMoreFilter)-1] == ',' ) {  // parameter of the "-F" option must be completed ...
+                while ( *rootDn ) if ( *rootDn++ == ',' )       // Extract "dc" root of the uid dn ...
+                        if ( strncmp ( rootDn, "dc=", 3 ) == 0 )
+                                break;
+                strcpy ( filter, oneMoreFilter ); strcat ( filter, rootDn );
+        } else  strcpy ( filter, oneMoreFilter );
+ 
+        // verification that the "memberUid" does contain the "userid" to authenticate:
+        if (ldap_compare_s(bind_ld, filter, "memberUid", userid) != LDAP_COMPARE_TRUE)
+            ret = 1;
+     }
+ 
     if (bind_ld != persistent_ld) {
         ldap_unbind(bind_ld);
         bind_ld = NULL;
